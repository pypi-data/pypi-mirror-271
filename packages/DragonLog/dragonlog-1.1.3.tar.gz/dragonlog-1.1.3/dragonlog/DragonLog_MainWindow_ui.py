# Form implementation generated from reading ui file 'DragonLog_MainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1300, 900)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons:icons8-dragon-96.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.QSOTableView = QtWidgets.QTableView(parent=self.centralwidget)
        self.QSOTableView.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.QSOTableView.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.ExtendedSelection)
        self.QSOTableView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectRows)
        self.QSOTableView.setSortingEnabled(True)
        self.QSOTableView.setObjectName("QSOTableView")
        self.QSOTableView.verticalHeader().setVisible(False)
        self.verticalLayout.addWidget(self.QSOTableView)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1300, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(parent=self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(parent=self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(parent=MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.ToolBarArea.TopToolBarArea, self.toolBar)
        self.logDockWidget = QtWidgets.QDockWidget(parent=MainWindow)
        self.logDockWidget.setFeatures(QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetClosable|QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetMovable)
        self.logDockWidget.setAllowedAreas(QtCore.Qt.DockWidgetArea.BottomDockWidgetArea|QtCore.Qt.DockWidgetArea.TopDockWidgetArea)
        self.logDockWidget.setObjectName("logDockWidget")
        self.logDockWidgetContents = QtWidgets.QWidget()
        self.logDockWidgetContents.setObjectName("logDockWidgetContents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.logDockWidgetContents)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.logTextEdit = QtWidgets.QTextEdit(parent=self.logDockWidgetContents)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        self.logTextEdit.setFont(font)
        self.logTextEdit.setTextInteractionFlags(QtCore.Qt.TextInteractionFlag.TextSelectableByKeyboard|QtCore.Qt.TextInteractionFlag.TextSelectableByMouse)
        self.logTextEdit.setObjectName("logTextEdit")
        self.verticalLayout_2.addWidget(self.logTextEdit)
        self.logDockWidget.setWidget(self.logDockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.logDockWidget)
        self.qsoDockWidget = QtWidgets.QDockWidget(parent=MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.qsoDockWidget.sizePolicy().hasHeightForWidth())
        self.qsoDockWidget.setSizePolicy(sizePolicy)
        self.qsoDockWidget.setAllowedAreas(QtCore.Qt.DockWidgetArea.LeftDockWidgetArea|QtCore.Qt.DockWidgetArea.RightDockWidgetArea)
        self.qsoDockWidget.setObjectName("qsoDockWidget")
        self.qsoDockWidgetContents = QtWidgets.QWidget()
        self.qsoDockWidgetContents.setObjectName("qsoDockWidgetContents")
        self.qsoDockWidget.setWidget(self.qsoDockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.qsoDockWidget)
        self.actionLog_QSO = QtGui.QAction(parent=MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons:edit_add.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionLog_QSO.setIcon(icon1)
        self.actionLog_QSO.setObjectName("actionLog_QSO")
        self.actionLog_QSO_TB = QtGui.QAction(parent=MainWindow)
        self.actionLog_QSO_TB.setIcon(icon1)
        self.actionLog_QSO_TB.setObjectName("actionLog_QSO_TB")
        self.actionSelect_DB = QtGui.QAction(parent=MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons:db.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSelect_DB.setIcon(icon2)
        self.actionSelect_DB.setObjectName("actionSelect_DB")
        self.actionSelect_DB_TB = QtGui.QAction(parent=MainWindow)
        self.actionSelect_DB_TB.setIcon(icon2)
        self.actionSelect_DB_TB.setObjectName("actionSelect_DB_TB")
        self.actionExit = QtGui.QAction(parent=MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons:exit.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionExit.setIcon(icon3)
        self.actionExit.setObjectName("actionExit")
        self.actionExport = QtGui.QAction(parent=MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons:fileexport.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionExport.setIcon(icon4)
        self.actionExport.setObjectName("actionExport")
        self.actionImport = QtGui.QAction(parent=MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons:fileimport.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionImport.setIcon(icon5)
        self.actionImport.setObjectName("actionImport")
        self.actionExport_TB = QtGui.QAction(parent=MainWindow)
        self.actionExport_TB.setIcon(icon4)
        self.actionExport_TB.setObjectName("actionExport_TB")
        self.actionImport_TB = QtGui.QAction(parent=MainWindow)
        self.actionImport_TB.setIcon(icon5)
        self.actionImport_TB.setObjectName("actionImport_TB")
        self.actionAbout = QtGui.QAction(parent=MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons:info.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionAbout.setIcon(icon6)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAbout_Qt = QtGui.QAction(parent=MainWindow)
        self.actionAbout_Qt.setIcon(icon6)
        self.actionAbout_Qt.setObjectName("actionAbout_Qt")
        self.actionDelete_log_entry = QtGui.QAction(parent=MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons:edit_remove.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionDelete_log_entry.setIcon(icon7)
        self.actionDelete_log_entry.setObjectName("actionDelete_log_entry")
        self.actionChange_log_entry = QtGui.QAction(parent=MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons:edit.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionChange_log_entry.setIcon(icon8)
        self.actionChange_log_entry.setObjectName("actionChange_log_entry")
        self.actionSettings = QtGui.QAction(parent=MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons:gear.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSettings.setIcon(icon9)
        self.actionSettings.setObjectName("actionSettings")
        self.actionSettings_TB = QtGui.QAction(parent=MainWindow)
        self.actionSettings_TB.setIcon(icon9)
        self.actionSettings_TB.setObjectName("actionSettings_TB")
        self.actionHelp = QtGui.QAction(parent=MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons:help.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionHelp.setIcon(icon10)
        self.actionHelp.setObjectName("actionHelp")
        self.actionStart_hamlib_TB = QtGui.QAction(parent=MainWindow)
        self.actionStart_hamlib_TB.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons:player_play.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        icon11.addPixmap(QtGui.QPixmap("icons:player_stop.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.On)
        self.actionStart_hamlib_TB.setIcon(icon11)
        self.actionStart_hamlib_TB.setObjectName("actionStart_hamlib_TB")
        self.actionWatch_file_for_QSOs = QtGui.QAction(parent=MainWindow)
        self.actionWatch_file_for_QSOs.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icons:watch.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionWatch_file_for_QSOs.setIcon(icon12)
        self.actionWatch_file_for_QSOs.setObjectName("actionWatch_file_for_QSOs")
        self.actionWatch_file_for_QSOs_TB = QtGui.QAction(parent=MainWindow)
        self.actionWatch_file_for_QSOs_TB.setCheckable(True)
        self.actionWatch_file_for_QSOs_TB.setIcon(icon12)
        self.actionWatch_file_for_QSOs_TB.setObjectName("actionWatch_file_for_QSOs_TB")
        self.actionShow_log = QtGui.QAction(parent=MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("icons:file_doc.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionShow_log.setIcon(icon13)
        self.actionShow_log.setObjectName("actionShow_log")
        self.actionUpload_logs_to_LoTW = QtGui.QAction(parent=MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("icons:upload_lotw.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionUpload_logs_to_LoTW.setIcon(icon14)
        self.actionUpload_logs_to_LoTW.setObjectName("actionUpload_logs_to_LoTW")
        self.menuFile.addAction(self.actionSelect_DB)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionLog_QSO)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionDelete_log_entry)
        self.menuEdit.addAction(self.actionChange_log_entry)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionWatch_file_for_QSOs)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionUpload_logs_to_LoTW)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionShow_log)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionAbout_Qt)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionSelect_DB_TB)
        self.toolBar.addAction(self.actionImport_TB)
        self.toolBar.addAction(self.actionExport_TB)
        self.toolBar.addAction(self.actionSettings_TB)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionStart_hamlib_TB)
        self.toolBar.addAction(self.actionLog_QSO_TB)
        self.toolBar.addAction(self.actionWatch_file_for_QSOs_TB)

        self.retranslateUi(MainWindow)
        self.actionAbout.triggered.connect(MainWindow.showAbout) # type: ignore
        self.actionAbout_Qt.triggered.connect(MainWindow.showAboutQt) # type: ignore
        self.actionLog_QSO.triggered.connect(MainWindow.logQSO) # type: ignore
        self.actionLog_QSO_TB.triggered.connect(MainWindow.logQSO) # type: ignore
        self.actionExit.triggered.connect(MainWindow.close) # type: ignore
        self.actionSelect_DB.triggered.connect(MainWindow.selectDB) # type: ignore
        self.actionDelete_log_entry.triggered.connect(MainWindow.deleteQSO) # type: ignore
        self.actionChange_log_entry.triggered.connect(MainWindow.changeQSO) # type: ignore
        self.actionSettings.triggered.connect(MainWindow.showSettings) # type: ignore
        self.actionSettings_TB.triggered.connect(MainWindow.showSettings) # type: ignore
        self.actionExport.triggered.connect(MainWindow.export) # type: ignore
        self.actionExport_TB.triggered.connect(MainWindow.export) # type: ignore
        self.QSOTableView.doubleClicked['QModelIndex'].connect(MainWindow.changeQSO) # type: ignore
        self.actionHelp.triggered.connect(MainWindow.showHelp) # type: ignore
        self.actionImport.triggered.connect(MainWindow.logImport) # type: ignore
        self.actionImport_TB.triggered.connect(MainWindow.logImport) # type: ignore
        self.actionStart_hamlib_TB.triggered['bool'].connect(MainWindow.ctrlHamlib) # type: ignore
        self.actionSelect_DB_TB.triggered.connect(MainWindow.selectDB) # type: ignore
        self.actionWatch_file_for_QSOs.triggered['bool'].connect(MainWindow.ctrlWatching) # type: ignore
        self.actionWatch_file_for_QSOs_TB.triggered['bool'].connect(MainWindow.ctrlWatching) # type: ignore
        self.actionShow_log.triggered.connect(self.logDockWidget.show) # type: ignore
        self.actionUpload_logs_to_LoTW.triggered.connect(MainWindow.lotwUpload) # type: ignore
        self.QSOTableView.clicked['QModelIndex'].connect(MainWindow.clearQSOForm) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DragonLog"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "Toolbar"))
        self.logDockWidget.setWindowTitle(_translate("MainWindow", "Application Log"))
        self.qsoDockWidget.setWindowTitle(_translate("MainWindow", "QSO Form"))
        self.actionLog_QSO.setText(_translate("MainWindow", "Log QSO..."))
        self.actionLog_QSO.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionLog_QSO_TB.setText(_translate("MainWindow", "Log QSO..."))
        self.actionSelect_DB.setText(_translate("MainWindow", "Select database..."))
        self.actionSelect_DB_TB.setText(_translate("MainWindow", "Select database..."))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionExport.setText(_translate("MainWindow", "Export..."))
        self.actionImport.setText(_translate("MainWindow", "Import..."))
        self.actionExport_TB.setText(_translate("MainWindow", "Export"))
        self.actionImport_TB.setText(_translate("MainWindow", "Import"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout_Qt.setText(_translate("MainWindow", "About Qt"))
        self.actionDelete_log_entry.setText(_translate("MainWindow", "Delete log entry"))
        self.actionDelete_log_entry.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionChange_log_entry.setText(_translate("MainWindow", "Change log entry..."))
        self.actionChange_log_entry.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionSettings_TB.setText(_translate("MainWindow", "Settings"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionStart_hamlib_TB.setText(_translate("MainWindow", "Start hamlib"))
        self.actionWatch_file_for_QSOs.setText(_translate("MainWindow", "Watch file for QSOs..."))
        self.actionWatch_file_for_QSOs.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionWatch_file_for_QSOs_TB.setText(_translate("MainWindow", "Watch file for QSOs..."))
        self.actionShow_log.setText(_translate("MainWindow", "Show log"))
        self.actionUpload_logs_to_LoTW.setText(_translate("MainWindow", "Upload logs to LoTW..."))
