name: Python Package

on:
  pull_request:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'macos-latest'
          - 'windows-latest'
        python:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

    runs-on: ${{ matrix.os }}

    name: ${{ matrix.os }} - Python ${{ matrix.python }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
     
      - name: Install Python packages
        run: python -m pip install --upgrade build pip cython wheel auditwheel

      - name: build wheel
        run: python -m build --wheel

      - name: install built wheel
        run: python -m pip install dist/*
        shell: bash

      - name: build sdist
        run: python -m build --sdist
        if: ${{ matrix.os == 'macos-latest' && matrix.python == '3.12' }}

      - name: Store the packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-${{ matrix.os }}-${{ matrix.python }}
          path: dist

  linux-build:
    strategy:
      fail-fast: false
      matrix:
        python:
          - 'cp38-cp38'
          - 'cp39-cp39'
          - 'cp310-cp310'
          - 'cp311-cp311'
          - 'cp312-cp312'

    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64

    name: Linux - Python ${{ matrix.python }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: build wheel
        run: |
          chmod 777 ./tools/build-ci.sh && PYTHON_VERSION=${{ matrix.python }} ./tools/build-ci.sh
      
      - name: Store the packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions-linux-${{ matrix.python }}
          path: dist

  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - build
      - linux-build

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          path: dist/
          pattern: python-package-distributions-*
          merge-multiple: true

      - name: Publish ðŸ“¦ to PyPI
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
