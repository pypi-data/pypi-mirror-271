[bdist_wheel]

[metadata]
version = attr: wsgidav.__version__
author = Martin Wendt
author_email = wsgidav@wwwendt.de
maintainer = Martin Wendt
maintainer_email = wsgidav@wwwendt.de
url = https://github.com/mar10/wsgidav
project_urls = 
	Bug Tracker = https://github.com/mar10/wsgidav/issues
	Source Code = https://github.com/mar10/wsgidav
	Documentation = https://wsgidav.readthedocs.io
	Download = https://github.com/mar10/wsgidav/releases/latest
	Discussions = https://github.com/mar10/wsgidav/discussions
description = Generic and extendable WebDAV server based on WSGI
long_description = file: README.md
long_description_content_type = text/markdown
keywords = web, wsgi, webdav, application, server
license = MIT
license_files = LICENSE
classifiers = 
	Development Status :: 5 - Production/Stable
	Environment :: Console
	Intended Audience :: Developers
	Intended Audience :: Information Technology
	Intended Audience :: System Administrators
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Programming Language :: Python :: 3.12
	Topic :: Internet :: WWW/HTTP
	Topic :: Internet :: WWW/HTTP :: HTTP Servers
	Topic :: Internet :: WWW/HTTP :: Dynamic Content
	Topic :: Internet :: WWW/HTTP :: WSGI
	Topic :: Internet :: WWW/HTTP :: WSGI :: Application
	Topic :: Internet :: WWW/HTTP :: WSGI :: Server
	Topic :: Software Development :: Libraries :: Python Modules

[options]
package_dir = 
	= .
packages = find:
zip_safe = False
install_requires = 
	defusedxml
	Jinja2
	json5
	PyYAML

[options.extras_require]
pam = python-pam

[options.packages.find]
where = .
include_package_data = True
exclude = 
	tests

[options.package_data]
wsgidav = 
	dir_browser/htdocs/*.*

[options.data_files]

[options.entry_points]
console_scripts = 
	wsgidav = wsgidav.server.server_cli:run

[check-manifest]
ignore = 
	docs/sphinx-build
	docs/sphinx-build/*

[aliases]

[coverage:run]
branch = True
omit = 
	tests/*
	wsgidav/prop_man/couch_property_manager.py
	wsgidav/prop_man/mongo_property_manager.py
	wsgidav/samples/*
	wsgidav/server/run_reloading_server.py
	wsgidav/server/server_sample.py

[coverage:report]
precision = 2
sort = Name
exclude_lines = 
	pragma: no cover
	if __name__ == .__main__.:

[coverage:html]
directory = build/coverage

[tool:pytest]
addopts = 
testpaths = 
	.
	tests
exclude = 
	__pycache__,
	.cache,
	.eggs,
	.git,
	.tox,
	.vscode,
	build,
	dist,
	docs
max-line-length = 99
ignore = E203, E501, W503, P101, A003, N806, W605
docstring-convention = all  # google?
inline-quotes = double
multiline-quotes = """
docstring-quotes = """
avoid-escape = True

[egg_info]
tag_build = 
tag_date = 0

