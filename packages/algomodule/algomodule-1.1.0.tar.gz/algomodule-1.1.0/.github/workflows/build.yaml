name: build
# The full list of cibuildwheel's build targets can be found here:
# https://github.com/pypa/cibuildwheel/blob/v2.2.0a1/cibuildwheel/resources/build-platforms.toml

on:
  workflow_dispatch:

jobs:
  configure_matrix:
    runs-on: ubuntu-latest
    env:
      MATRIX_WORKFLOW_DISPATCH: |
        {
          "include": [
            {"os": "ubuntu-22.04", "CIBW_BUILD": "cp*-manylinux_*", "CIBW_ARCHS": "x86_64"},
            {"os": "ubuntu-22.04", "CIBW_BUILD": "cp*-manylinux_*", "CIBW_ARCHS": "aarch64"},
            {"os": "ubuntu-22.04", "CIBW_BUILD": "cp*-musllinux_*", "CIBW_ARCHS": "x86_64"},
            {"os": "ubuntu-22.04", "CIBW_BUILD": "cp*-musllinux_*", "CIBW_ARCHS": "aarch64"},
            {"os": "macos-13", "CIBW_BUILD": "cp*", "CIBW_ARCHS": "x86_64"},
            {"os": "windows-2022", "CIBW_BUILD": "cp*", "CIBW_ARCHS": "AMD64"}
          ]
        }

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    - id: set-matrix
      run: |
        echo ::set-output name=matrix::$(echo $MATRIX_WORKFLOW_DISPATCH | jq -c)

  build_wheels:
    needs: configure_matrix
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.configure_matrix.outputs.matrix) }}

    env:
      CIBW_BUILD_VERBOSITY: 1
      CIBW_BUILD: ${{ matrix.CIBW_BUILD }}
      CIBW_ARCHS: ${{ matrix.CIBW_ARCHS }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/cache@v2
      id: cache-wheel
      with:
        path: wheelhouse
        key: wheel-${{ matrix.CIBW_BUILD }}-${{ matrix.CIBW_ARCHS }}-${{ github.sha }}

    - uses: docker/setup-qemu-action@v1
      if: steps.cache-wheel.outputs.cache-hit != 'true' && runner.os == 'Linux'

    - name: Install OpenSSL
      if: ${{ matrix.os == 'windows-2022' }}
      run: |
        choco install openssl

    - uses: pypa/cibuildwheel@v2.2.2
      if: steps.cache-wheel.outputs.cache-hit != 'true'

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3

    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl
        name: wheels

  upload_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    if: needs.build_wheels.result == 'success'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: wheels
        path: wheelhouse

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: wheelhouse
        skip_existing: true
