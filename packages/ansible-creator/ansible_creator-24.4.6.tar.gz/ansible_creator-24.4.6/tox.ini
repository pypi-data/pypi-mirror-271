[tox]
requires =
    tox>=4.6.3
env_list =
    py
    pkg
    lint
    docs

[testenv]
description = Run pytest under {basepython}
package = editable
extras =
    test
set_env =
    COLUMNS = 80
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
    COVERAGE_PROCESS_START = {toxinidir}/pyproject.toml
    PIP_CONSTRAINT = {toxinidir}/.config/constraints.txt
    devel, lint, pkg: PIP_CONSTRAINT = /dev/null
commands_pre =
    {envpython} -m pip check
    sh -c "rm -f .coverage {toxworkdir}/.coverage.* 2>/dev/null || true"
commands =
    coverage run -m pytest {posargs:tests}
    sh -c "coverage combine -a -q --data-file=.coverage {toxworkdir}/.coverage.*"
    sh -c "COVERAGE_FILE= coverage xml --ignore-errors -q --fail-under=0"
    sh -c "COVERAGE_FILE= coverage report"
allowlist_externals =
    sh

[testenv:pkg]
description =
    Build package, verify metadata, install package and assert behavior when ansible is missing.
skip_install = true
deps =
    build>=0.9
    twine>=4.0.1
commands =
    {envpython} -c 'import os.path, shutil, sys; \
      dist_dir = os.path.join("{toxinidir}", "dist"); \
      os.path.isdir(dist_dir) or sys.exit(0); \
      print("Removing \{!s\} contents...".format(dist_dir), file=sys.stderr); \
      shutil.rmtree(dist_dir)'
    {envpython} -m build \
      --outdir {toxinidir}/dist/ \
      {toxinidir}
    twine check --strict {toxinidir}/dist/*
    sh -c "python3 -m pip install {toxinidir}/dist/*.whl"
    pip uninstall -y ansible-creator

[testenv:lint]
description = Enforce quality standards under {basepython} ({envpython})
base_python = python3.10
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run --show-diff-on-failure --all-files

[testenv:docs]
description = Builds docs
package = editable
skip_install = false
extras =
    docs
commands =
    mkdocs {posargs:build --strict --site-dir=_readthedocs/html/}
