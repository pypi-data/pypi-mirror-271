/// Files: net/ipv4/esp4.c net/ipv6/esp6.c
/// Fix: ebe48d368e97d007bfeb76fcb065d6cfc4c96645
/// Fixes: cac2661c53f35cbe651bef9b07026a5a05ab8ce0

virtual detect

@err_esp@
identifier cow, skb, tailen, allocsz;
position p;
@@

\(esp_output_head\|esp_output\)(..., struct sk_buff *skb, ...)
{
	... when != allocsz = ALIGN(skb->data_len + tailen, L1_CACHE_BYTES);
	    when != if (allocsz > ESP_SKB_FRAG_MAXSIZE) goto cow;
	    when != if (ALIGN(tailen, L1_CACHE_BYTES) > PAGE_SIZE || ALIGN(skb->data_len, L1_CACHE_BYTES) > PAGE_SIZE) goto cow;
*	skb_cloned@p(skb)
	...
}

@err_esp6@
identifier cow, skb, tailen, allocsz;
position p;
@@

\(esp6_output_head\|esp6_output\)(..., struct sk_buff *skb, ...)
{
	... when != allocsz = ALIGN(skb->data_len + tailen, L1_CACHE_BYTES);
	    when != if (allocsz > ESP_SKB_FRAG_MAXSIZE) goto cow;
	    when != if (ALIGN(tailen, L1_CACHE_BYTES) > PAGE_SIZE || ALIGN(skb->data_len, L1_CACHE_BYTES) > PAGE_SIZE) goto cow;
*	skb_cloned@p(skb)
	...
}

@script:python depends on detect@
p << err_esp.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2022-27666')

@script:python depends on detect@
p << err_esp6.p;
@@

coccilib.report.print_report(p[0], 'ERROR: CVE-2022-27666')
