Metadata-Version: 2.1
Name: cybermarket_client
Version: 1.0.0
Summary: A client that simulates a supermarket, has a visual user and merchant interface, allowing customers to purchase goods and merchants to manage goods.
Author-email: Qi Tang <t390697002@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Qi Tang
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Keywords: shopping,online-market
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas==2.2.1
Requires-Dist: PyQt5==5.15.9
Requires-Dist: loguru==0.6.0
Requires-Dist: python-dotenv==0.21.0
Requires-Dist: click==8.1.7

# cybermarket_client

The client of a online cybermarket.

**Module goals:** Build a module that sends a binary message to cybermarket_server and responds accordingly based on the server's reply.

## Overview
This project consists of several Python files that together form an application for interacting with a server. Each file serves a specific purpose in the application.

## File Summaries

1. **`__init__.py`**
   - Purpose: Module initialization.
   - Content: Contains a docstring.

2. **`__main__.py`**
   - Purpose: Entrance to the main program.
   - Content: Defines the main entry point for the program and imports necessary modules.

3. **`lang.py`**
   - Purpose: Language configuration of server information.
   - Content: Defines language-related functionalities such as module paths.

4. **`logic.py`**
   - Purpose: Initializes the Script class.
   - Content: Contains code for initializing the Script class and interacting with the server.

5. **`request.py`**
   - Purpose: Functions that interact with the server.
   - Content: Implements functions for server communication and message handling.

6. **`settings.py`**
   - Purpose: Entrance to the interactive interface.
   - Content: Defines settings related to the interactive interface.

7. **`ui.py`**
   - Purpose: User interface.
   - Content: Defines user interface components using PyQt5.

## Usage
To use this application, run `__main__.py` to start the program. Ensure that all necessary dependencies are installed before running the program.

## Dependencies
- PyQt5
- loguru
- pandas
