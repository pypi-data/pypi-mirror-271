[tool]
[tool.poetry]
name = "docprompt"
version = "0.4.2"
homepage = "https://github.com/Page-Leaf/docprompt"
description = "Documents and large language models."
authors = ["Frankie Colson <frank@pageleaf.io>"]
readme = "README.md"
license =  "Apache-2.0"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
packages = [
    { include = "docprompt" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.13"

isort  = { version = "^5.12.0", optional = true}
flake8  = { version = "^6.1.0", optional = true}
flake8-docstrings = { version = "^1.7.0", optional = true }
mypy = {version = "^1.6.1", optional = true}
pytest  = { version = "^7.4.2", optional = true}
pytest-cov  = { version = "^4.1.0", optional = true}
tox  = { version = "^3.20.1", optional = true}
virtualenv  = { version = "^20.2.2", optional = true}
pip  = { version = "^20.3.1", optional = true}
mkdocs  = { version = "^1.1.2", optional = true}
mkdocs-include-markdown-plugin  = { version = "^1.0.0", optional = true}
mkdocs-material  = { version = "^6.1.7", optional = true}
mkdocstrings  = { version = "^0.15.2", optional = true}
mkdocs-material-extensions  = { version = "^1.0.1", optional = true}
twine  = { version = "^3.3.0", optional = true}
mkdocs-autorefs = {version = "^0.2.1", optional = true}
pre-commit = {version = "^2.12.0", optional = true}
toml = {version = "^0.10.2", optional = true}
bump2version = {version = "^1.0.1", optional = true}
python-dateutil = "^2.8.2"

numpy = {version = "^1.20.3", optional = true}
pillow = ">=9.0.1"
python-magic = ">=0.4.24"
google-cloud-documentai = {version = ">=2.20.0", optional = true}
azure-ai-formrecognizer = {version = ">=3.3.0", optional = true}
tqdm = ">=4.61.0"
fsspec = ">=2022.11.0"
pydantic = ">=2.1.0"
tenacity = ">=7.0.0"
pypdfium2 = "^4.28.0"
tantivy = {version = "^0.21.0", optional = true}
rtree = {version = "^1.2.0", optional = true}
networkx = {version = ">=2.8.8", optional = true}
rapidfuzz = ">=3.0.0"
ruff = {version = "^0.3.3", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov",
    "ruff"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
    ]

google = [
    "google-cloud-documentai"
]

azure = [
    "azure-ai-formrecognizer"
]

search = [
    "tantivy",
    "rtree",
    "networkx"
]


[tool.poetry.scripts]
docprompt = 'docprompt.cli:main'

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.flake8]
ignore = [
    "E501",
]

[tool.ruff]
target-version = "py38"


[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
