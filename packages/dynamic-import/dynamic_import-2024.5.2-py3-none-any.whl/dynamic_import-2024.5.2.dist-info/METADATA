Metadata-Version: 2.1
Name: dynamic_import
Version: 2024.5.2
Summary: Let Dynamic Import handle your projects(package) import needs. Enables you to dynamically(lazily) import module as needed on run-time.
Author: Ritesh
License: Creative Commons Legal Code
        
        CC0 1.0 Universal
        
            CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE
            LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN
            ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS
            INFORMATION ON AN "AS-IS" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES
            REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS
            PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM
            THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED
            HEREUNDER.
        
        Statement of Purpose
        
        The laws of most jurisdictions throughout the world automatically confer
        exclusive Copyright and Related Rights (defined below) upon the creator
        and subsequent owner(s) (each and all, an "owner") of an original work of
        authorship and/or a database (each, a "Work").
        
        Certain owners wish to permanently relinquish those rights to a Work for
        the purpose of contributing to a commons of creative, cultural and
        scientific works ("Commons") that the public can reliably and without fear
        of later claims of infringement build upon, modify, incorporate in other
        works, reuse and redistribute as freely as possible in any form whatsoever
        and for any purposes, including without limitation commercial purposes.
        These owners may contribute to the Commons to promote the ideal of a free
        culture and the further production of creative, cultural and scientific
        works, or to gain reputation or greater distribution for their Work in
        part through the use and efforts of others.
        
        For these and/or other purposes and motivations, and without any
        expectation of additional consideration or compensation, the person
        associating CC0 with a Work (the "Affirmer"), to the extent that he or she
        is an owner of Copyright and Related Rights in the Work, voluntarily
        elects to apply CC0 to the Work and publicly distribute the Work under its
        terms, with knowledge of his or her Copyright and Related Rights in the
        Work and the meaning and intended legal effect of CC0 on those rights.
        
        1. Copyright and Related Rights. A Work made available under CC0 may be
        protected by copyright and related or neighboring rights ("Copyright and
        Related Rights"). Copyright and Related Rights include, but are not
        limited to, the following:
        
          i. the right to reproduce, adapt, distribute, perform, display,
             communicate, and translate a Work;
         ii. moral rights retained by the original author(s) and/or performer(s);
        iii. publicity and privacy rights pertaining to a person's image or
             likeness depicted in a Work;
         iv. rights protecting against unfair competition in regards to a Work,
             subject to the limitations in paragraph 4(a), below;
          v. rights protecting the extraction, dissemination, use and reuse of data
             in a Work;
         vi. database rights (such as those arising under Directive 96/9/EC of the
             European Parliament and of the Council of 11 March 1996 on the legal
             protection of databases, and under any national implementation
             thereof, including any amended or successor version of such
             directive); and
        vii. other similar, equivalent or corresponding rights throughout the
             world based on applicable law or treaty, and any national
             implementations thereof.
        
        2. Waiver. To the greatest extent permitted by, but not in contravention
        of, applicable law, Affirmer hereby overtly, fully, permanently,
        irrevocably and unconditionally waives, abandons, and surrenders all of
        Affirmer's Copyright and Related Rights and associated claims and causes
        of action, whether now known or unknown (including existing as well as
        future claims and causes of action), in the Work (i) in all territories
        worldwide, (ii) for the maximum duration provided by applicable law or
        treaty (including future time extensions), (iii) in any current or future
        medium and for any number of copies, and (iv) for any purpose whatsoever,
        including without limitation commercial, advertising or promotional
        purposes (the "Waiver"). Affirmer makes the Waiver for the benefit of each
        member of the public at large and to the detriment of Affirmer's heirs and
        successors, fully intending that such Waiver shall not be subject to
        revocation, rescission, cancellation, termination, or any other legal or
        equitable action to disrupt the quiet enjoyment of the Work by the public
        as contemplated by Affirmer's express Statement of Purpose.
        
        3. Public License Fallback. Should any part of the Waiver for any reason
        be judged legally invalid or ineffective under applicable law, then the
        Waiver shall be preserved to the maximum extent permitted taking into
        account Affirmer's express Statement of Purpose. In addition, to the
        extent the Waiver is so judged Affirmer hereby grants to each affected
        person a royalty-free, non transferable, non sublicensable, non exclusive,
        irrevocable and unconditional license to exercise Affirmer's Copyright and
        Related Rights in the Work (i) in all territories worldwide, (ii) for the
        maximum duration provided by applicable law or treaty (including future
        time extensions), (iii) in any current or future medium and for any number
        of copies, and (iv) for any purpose whatsoever, including without
        limitation commercial, advertising or promotional purposes (the
        "License"). The License shall be deemed effective as of the date CC0 was
        applied by Affirmer to the Work. Should any part of the License for any
        reason be judged legally invalid or ineffective under applicable law, such
        partial invalidity or ineffectiveness shall not invalidate the remainder
        of the License, and in such case Affirmer hereby affirms that he or she
        will not (i) exercise any of his or her remaining Copyright and Related
        Rights in the Work or (ii) assert any associated claims and causes of
        action with respect to the Work, in either case contrary to Affirmer's
        express Statement of Purpose.
        
        4. Limitations and Disclaimers.
        
         a. No trademark or patent rights held by Affirmer are waived, abandoned,
            surrendered, licensed or otherwise affected by this document.
         b. Affirmer offers the Work as-is and makes no representations or
            warranties of any kind concerning the Work, express, implied,
            statutory or otherwise, including without limitation warranties of
            title, merchantability, fitness for a particular purpose, non
            infringement, or the absence of latent or other defects, accuracy, or
            the present or absence of errors, whether or not discoverable, all to
            the greatest extent permissible under applicable law.
         c. Affirmer disclaims responsibility for clearing rights of other persons
            that may apply to the Work or any use thereof, including without
            limitation any person's Copyright and Related Rights in the Work.
            Further, Affirmer disclaims responsibility for obtaining any necessary
            consents, permissions or other rights required for any use of the
            Work.
         d. Affirmer understands and acknowledges that Creative Commons is not a
            party to this document and has no duty or obligation with respect to
            this CC0 or use of the Work.
        
Project-URL: Homepage, https://github.com/YoSTEALTH/Dynamic-Import
Project-URL: Issues, https://github.com/YoSTEALTH/Dynamic-Import/issues
Classifier: Topic :: Software Development
Classifier: License :: Public Domain
Classifier: Intended Audience :: Developers
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Development Status :: 5 - Production/Stable
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE.txt

|test-status| |downloads|

Dynamic Import
==============

Let Dynamic Import handle your projects(package) import needs. Enables you to dynamically(lazily)
import module as needed within the project and for external usage on run-time.

* Place ``importer()`` into top ``__init__.py`` file and forget about where
  variable, function, class, ... are located.
* Just call ``from <package> import <variable>`` while coding and when end-user calls from your
  project. All names are accessible at top level, easy to remember.
* Move/rename file within your project? No problem, auto updates. 
* Supports ``.py`` and ``.so`` (experimental)
* Saves memory(for medium to large projects).

Ultimate worry free management comfort as your project grows from small to large.


Requires
--------

    - Python 3.8+
    - Linux, MacOS


Install, update & uninstall
---------------------------

Use `pip`_ to:

.. code-block:: bash

    python3 -m pip install dynamic-import            # install

    python3 -m pip install --upgrade dynamic-import  # update

    python3 -m pip uninstall dynamic-import          # uninstall


Install directly from GitHub
____________________________


.. code-block:: bash

    python3 -m pip install --upgrade git+https://github.com/YoSTEALTH/Dynamic-Import


Usage
-----

.. code-block:: python

    # ./<package>/__init__.py
    from dynamic_import import importer

    importer()


``importer()`` options
______________________


.. code-block:: python

    importer(cache=False)  # disable & remove cache file (for temporary use only!)

    importer(recursive=False)  # do not scan sub-directories

    # exclude `.py, .so` file
    importer(exclude_file='file.py')                          # single
    importer(exclude_file=('one.py', 'sub-dir/two.py', ...))  # multiple

    # exclude sub-directory
    importer(exclude_dir='sub-dir')                        # single
    importer(exclude_dir=('sub-dir', 'sub/sub-dir', ...))  # multiple


Example
-------

.. code-block:: python

    # ./example/pkg/__init__.py
    from dynamic_import import importer


    __version__ = '1.2.3'  # if need to use special name place it above `importer()`

    importer()  # only need to call `importer()` once inside main `__init__.py` file.

    # note: `importer()` will scan all package directory and sub-directories for `.py, .so`
    # files and cache import names for dynamic use.


.. code-block:: python

    # ./example/pkg/var.py
    import sys

    # just like normal import if `__all__` is not defined, `my_var` will be included.
    # Also `sys` will not be included.

    my_var = sys.version_info.major


.. code-block:: python

    # ./example/pkg/functions/myfunction.py
    from pkg import my_var
    # all import names are available at higher level, 
    # no need for `from ..example.var import my_var`

    __all__ = 'my_function'  # using just string for single name is ok


    def my_function():
        return my_var + 1


.. code-block:: python

    # ./example/classes/__init__.py

    __all__ = ['MyClass']


    class MyClass:
        pass


Calling
_______


.. code-block:: python

    # ./example/calling.py
    # import all 3 names regardless of where module is located
    from pkg import my_var, my_function, MyClass

    # or 
    import pkg

    MyClass()
    print(my_var, pkg.my_var is my_var) # 3 True
    print(my_function())                # 4
    print(dir(pkg))                     # ['my_var', 'my_function', 'MyClass', ...]


Note
----
    - Only need to call ``importer()`` once inside ``__init__.py`` file.
    - All sub-directories will be scanned for ``.py, .so`` file as ``recursive=True`` by default.
    - Use ``exclude_dir`` to list sub-directories you would like to avoid scanning.
    - You can still use normal static/relative import.
    - For one word import name you can use string
      e.g. ``__all__ = 'function'`` vs ``__all__ = ('function',)``
    - All import names must be unique.
    - Cache can be disabled & removed by using ``importer(cache=False)``
    - Cached temporary files are stored in ``./__pycache__/__init__.importer-<python-version>.pyc``
    - You can move or rename any ``.py`` file within project directory or sub-directory and 
      import will not break.
    - Special name e.g: ``__something__`` are ignored. If need to use special name place it 
      above ``importer()`` e.g.``__version__ = '1.2.3'; importer()``
    - Using ``from <package> import *`` is not recommended unless you want to load all the modules.
    - No need to have empty ``__init__.py`` inside sub-directories. Its "like" Namespace + Package
      combined into one! but not technically.
    - Calling ``dir(<package>)`` enables you to show all importable names without loading modules.


Experimental
------------
    - Having module name and function name the same is ok! e.g. ``from pkg import my_fun`` while
      ``./pkg/my_fun.py`` and calling ``my_fun()`` will not conflict with module name. Module will
      still load in the background.
    - ``importer()`` also works with certain ``.cpython-<...>.so`` ``.abi3.so`` file
      (only tested with cython created ``*.so``).
    - ``.so`` should not contain any function/class that auto-run on import e.g.``run_something()``
    - Visit `Liburing`_ to see project using Dynamic Import with ``.so`` files in action.


License
-------
Free, Public Domain (CC0). `Read more`_

.. _pip: https://pip.pypa.io/en/stable/getting-started/
.. _Read more: https://github.com/YoSTEALTH/Dynamic-Import/blob/master/LICENSE.txt
.. _Liburing: https://github.com/YoSTEALTH/Liburing
.. |test-status| image:: https://github.com/yostealth/dynamic-import/actions/workflows/test.yml/badge.svg?branch=master&event=push
    :target: https://github.com/yostealth/dynamic-import/actions/workflows/test.yml
    :alt: Test status
.. |downloads| image:: https://img.shields.io/pypi/dm/dynamic_import
   :alt: PyPI - Downloads
