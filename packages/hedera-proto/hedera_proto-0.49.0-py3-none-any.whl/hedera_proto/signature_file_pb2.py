# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signature_file.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import basic_types_pb2 as basic__types__pb2
import hash_object_pb2 as hash__object__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14signature_file.proto\x12\x05proto\x1a\x11\x62\x61sic_types.proto\x1a\x11hash_object.proto\"s\n\rSignatureFile\x12.\n\x0e\x66ile_signature\x18\x01 \x01(\x0b\x32\x16.proto.SignatureObject\x12\x32\n\x12metadata_signature\x18\x02 \x01(\x0b\x32\x16.proto.SignatureObject\"\x92\x01\n\x0fSignatureObject\x12\"\n\x04type\x18\x01 \x01(\x0e\x32\x14.proto.SignatureType\x12\x0e\n\x06length\x18\x02 \x01(\x05\x12\x10\n\x08\x63hecksum\x18\x03 \x01(\x05\x12\x11\n\tsignature\x18\x04 \x01(\x0c\x12&\n\x0bhash_object\x18\x05 \x01(\x0b\x32\x11.proto.HashObject*A\n\rSignatureType\x12\x1a\n\x16SIGNATURE_TYPE_UNKNOWN\x10\x00\x12\x14\n\x10SHA_384_WITH_RSA\x10\x01\x42$\n com.hedera.services.stream.protoP\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'signature_file_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n com.hedera.services.stream.protoP\001'
  _globals['_SIGNATURETYPE']._serialized_start=335
  _globals['_SIGNATURETYPE']._serialized_end=400
  _globals['_SIGNATUREFILE']._serialized_start=69
  _globals['_SIGNATUREFILE']._serialized_end=184
  _globals['_SIGNATUREOBJECT']._serialized_start=187
  _globals['_SIGNATUREOBJECT']._serialized_end=333
# @@protoc_insertion_point(module_scope)
