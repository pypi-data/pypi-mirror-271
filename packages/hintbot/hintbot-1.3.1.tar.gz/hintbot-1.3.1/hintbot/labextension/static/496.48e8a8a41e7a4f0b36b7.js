"use strict";(self.webpackChunkhintbot=self.webpackChunkhintbot||[]).push([[496],{496:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var o=n(832),a=n(184),i=n(756),r=n(882),s=n(637),l=n(29),d=n.n(l);class c extends i.ReactWidget{constructor(e){super(),this._message="",this._message=e}getValue(){var e;return null===(e=this.node.querySelector("textarea"))||void 0===e?void 0:e.value}render(){return d().createElement("div",{className:"reflection"},d().createElement("label",null,this._message,d().createElement("textarea",{name:"reflection-input",className:"reflection-input",rows:10})))}}const u=e=>(0,i.showDialog)({title:"Reflection",body:new c(e),buttons:[i.Dialog.cancelButton({label:"Cancel",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"}),i.Dialog.createButton({label:"Submit",className:"jp-Dialog-button jp-mod-accept jp-mod-styled"})],hasClose:!1});var h=n(363),m=n(520);async function g(e="",t={}){const n=m.ServerConnection.makeSettings(),o=h.URLExt.join(n.baseUrl,"hintbot",e);let a;try{a=await m.ServerConnection.makeRequest(o,t,n)}catch(e){throw new m.ServerConnection.NetworkError(e)}let i=await a.text();if(i.length>0)try{i=JSON.parse(i)}catch(e){console.log("Not a JSON response body.",a)}if(!a.ok)throw new m.ServerConnection.ResponseError(a,i.message||i);return i}const p=async(e,t,n,o)=>{var a;const r=null===(a=o.getMetadata("nbgrader"))||void 0===a?void 0:a.grade_id,s=o.getMetadata("remaining_hints");if(document.getElementById("hint-banner"))(0,i.showDialog)({title:"Please review previous hint first.",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),n.exporters.forEach((t=>{n.publishEvent(e,{eventName:"HintAlreadyExists",eventTime:Date.now(),eventInfo:{gradeId:r}},t,!1)}));else if(s<1)(0,i.showDialog)({title:"No hint left for this question.",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),n.exporters.forEach((t=>{n.publishEvent(e,{eventName:"NotEnoughHint",eventTime:Date.now(),eventInfo:{gradeId:r}},t,!1)}));else{let a=t.get("preReflection").composite,l=t.get("postReflection").composite;try{const e=(await g("id")).split("").map((e=>e.charCodeAt(0)-64)).reduce(((e,t)=>e+t),0)%3;console.log(`Condition ${e}`),0===e?(a=!0,l=!1):1===e?(a=!1,l=!0):(a=!1,l=!1)}catch(t){n.exporters.forEach((o=>{n.publishEvent(e,{eventName:"ConvertIDError",eventTime:Date.now(),eventInfo:{error:t}},o,!0)})),console.log(t)}if((async(e,t,n,o)=>{var a;const r=n.getMetadata("nbgrader").grade_id,s=document.createElement("div");s.id="hint-banner-placeholder",e.content.node.insertBefore(s,e.content.node.firstChild);const l=document.createElement("div");l.id="hint-banner",null===(a=e.content.node.parentElement)||void 0===a||a.insertBefore(l,e.content.node),l.innerHTML='<p><span class="loader"></span>Retrieving hint... Please do not refresh the page.</p> <p>It usually takes around 2 minutes to generate a hint. You may continue to work on the assignment in the meantime.</p>';const d=document.createElement("div");d.id="hint-banner-cancel-button",d.innerText="Cancel request",l.appendChild(d),d.onclick=async()=>{await g("cancel",{method:"POST",body:JSON.stringify({problem_id:r})})};try{const n=await g("hint",{method:"POST",body:JSON.stringify({problem_id:r,buggy_notebook_path:e.context.path})});console.log("create ticket",n);const a=null==n?void 0:n.request_id;if(!a)throw new Error;{const n=setInterval((async()=>{const c=await g("check",{method:"POST",body:JSON.stringify({problem_id:r})});if(0!==c.status)if(1===c.status)console.log("success"),clearInterval(n),((n,a)=>{t.exporters.forEach((o=>{t.publishEvent(e,{eventName:"HintRequestCompleted",eventTime:Date.now(),eventInfo:{hintContent:n,gradeId:r,requestId:a}},o,!0)})),l.innerText=n,d.remove();const i=document.createElement("div");i.id="hint-banner-buttons-container";const c=document.createElement("div");c.id="hint-banner-buttons";const h=document.createElement("button");h.classList.add("hint-banner-button"),h.innerText="Helpful 👍";const m=document.createElement("button");m.classList.add("hint-banner-button"),m.innerText="Unhelpful 👎";const g=async i=>{if(t.exporters.forEach((o=>{t.publishEvent(e,{eventName:"HintEvaluated",eventTime:Date.now(),eventInfo:{gradeId:r,requestId:a,hintContent:n,evaluation:i}},o,!0)})),o){const o=["Considering the hint you just received and your solution thus far, what steps will you take next to move forward on the question?","Considering the hint you just received and your solution thus far, are there other topics from the course material you should be incorporating into your solution?","Considering the hint you just received and your solution thus far, was your general approach a good one, or should you change to an alternative approach to solve the step of the question you are working on?"],i=Math.floor(Math.random()*o.length),d=await u(o[i]);"Submit"===d.button.label&&(l.remove(),s.remove()),t.exporters.forEach((o=>{t.publishEvent(e,{eventName:"PostReflection",eventTime:Date.now(),eventInfo:{status:d.button.label,gradeId:r,requestId:a,hintContent:n,prompt:i,reflection:d.value}},o,!0)}))}else l.remove(),s.remove()};h.onclick=()=>{g("helpful")},m.onclick=()=>{g("unhelpful")},c.appendChild(m),c.appendChild(h),i.appendChild(c),l.appendChild(i)})(JSON.parse(c.result).feedback,a);else{if(2!==c.status)throw clearInterval(n),new Error(a);console.log("cancelled"),clearInterval(n),(n=>{l.remove(),s.remove(),(0,i.showDialog)({title:"Hint Request Cancelled",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((o=>{t.publishEvent(e,{eventName:"HintRequestCancelled",eventTime:Date.now(),eventInfo:{gradeId:r,requestId:n}},o,!1)}))})(a)}else console.log("loading")}),1e3)}}catch(n){console.log(n),(n=>{l.remove(),s.remove(),(0,i.showDialog)({title:"Hint Request Error. Please try again later",buttons:[i.Dialog.createButton({label:"Dismiss",className:"jp-Dialog-button jp-mod-reject jp-mod-styled"})]}),t.exporters.forEach((o=>{t.publishEvent(e,{eventName:"HintRequestError",eventTime:Date.now(),eventInfo:{gradeId:r,requestId:null==n?void 0:n.message}},o,!1)}))})(n)}})(e,n,o,l),o.setMetadata("remaining_hints",s-1),document.getElementById(r).innerText=`Hint (${s-1} left for this question)`,e.context.save(),a){document.getElementById("hint-banner").style.filter="blur(10px)";const t=["Considering your submission and the feedback you have gotten from the system thus far, what are the steps you think must be followed in order to answer this question, and which step is the one you are currently stuck on?","Considering your submission and the feedback you have gotten from the system thus far, which topics in the course do you think are most relevant to the current problem you are facing?","Considering your submission and the feedback you have gotten from the system thus far, is there an alternative approach which you can try to to solve the step of the question you are working on?"],o=Math.floor(Math.random()*t.length),a=await u(t[o]);document.getElementById("hint-banner").style.filter="none",n.exporters.forEach((t=>{n.publishEvent(e,{eventName:"PreReflection",eventTime:Date.now(),eventInfo:{status:a.button.label,gradeId:r,prompt:o,reflection:a.value}},t,!0)})),"Cancel"===a.button.label&&await g("cancel",{method:"POST",body:JSON.stringify({problem_id:r})})}}},v={id:"hintbot:plugin",description:"A JupyterLab extension.",autoStart:!0,requires:[a.INotebookTracker,o.ISettingRegistry,s.IJupyterLabPioneer],activate:async(e,t,n,o)=>{const a=document.createElement("button");a.innerText="Activate HintBot Extension",a.id="hintbot-activation-button";const s=document.createElement("div");s.appendChild(a);const l=await n.load(v.id);t.widgetAdded.connect((async(e,t)=>{await t.revealed,await o.loadExporters(t),t.toolbar.insertAfter("spacer","hintbot-activation-button",new r.Widget({node:s})),a.onclick=async()=>{"Confirm activation"===(await(0,i.showDialog)({body:"The hintbot extension is a prototype and not required to be used for the course. \n The hints generated could be wrong, and it involves sending data to third party services outside of the university.",buttons:[i.Dialog.cancelButton({label:"Cancel",className:"jp-mod-reject jp-mod-styled"}),i.Dialog.createButton({label:"Confirm activation",className:"jp-mod-accept jp-mod-styled"})],hasClose:!1})).button.label&&(await(async(e,t,n)=>{var o,a,i,r;const s=t.get("hintQuantity").composite,l=null===(o=e.content.model)||void 0===o?void 0:o.cells;if(l)for(let o=0;o<l.length;o++)if(l.get(o).getMetadata("nbgrader")&&"markdown"===(null===(a=l.get(o).getMetadata("nbgrader"))||void 0===a?void 0:a.cell_type)&&(null===(i=l.get(o).getMetadata("nbgrader"))||void 0===i?void 0:i.grade_id)&&!["cell-d4da7eb9acee2a6d","cell-a839e7b47494b4c2","cell-018440ed2f1b6a62","cell-018440eg2f1b6a62"].includes(null===(r=l.get(o).getMetadata("nbgrader"))||void 0===r?void 0:r.grade_id)){const a=document.createElement("button");a.classList.add("hint-button"),a.id=l.get(o).getMetadata("nbgrader").grade_id,a.onclick=()=>p(e,t,n,l.get(o)),e.content.widgets[o].node.appendChild(a),void 0===l.get(o).getMetadata("remaining_hints")?(l.get(o).setMetadata("remaining_hints",s),a.innerText=`Hint (${s} left for this question)`):a.innerText=`Hint (${l.get(o).getMetadata("remaining_hints")} left for this question)`}})(t,l,o),a.remove(),o.exporters.forEach((e=>o.publishEvent(t,{eventName:"HintBotActivated",eventTime:Date.now()},e,!1))))}}))}},b=v}}]);