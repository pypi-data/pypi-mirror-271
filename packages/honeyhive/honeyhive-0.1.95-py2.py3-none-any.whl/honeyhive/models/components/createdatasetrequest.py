"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from honeyhive import utils
from typing import Any, Dict, List, Optional

class PipelineType(str, Enum):
    r"""The type of data included in the dataset - \\"event\\" or \\"session\\" """
    EVENT = 'event'
    SESSION = 'session'

class CreateDatasetRequestType(str, Enum):
    r"""What the dataset is to be used for - \\"evaluation\\" or \\"fine-tuning\\" """
    EVALUATION = 'evaluation'
    FINE_TUNING = 'fine-tuning'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateDatasetRequest:
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    project: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project') }})
    r"""UUID of the project associated with this dataset"""
    datapoints: Optional[List[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datapoints'), 'exclude': lambda f: f is None }})
    r"""List of unique datapoint ids to be included in this dataset"""
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    linked_evals: Optional[List[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linked_evals'), 'exclude': lambda f: f is None }})
    r"""List of unique evaluation run ids to be associated with this dataset"""
    metadata: Optional[Dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Any helpful metadata to track for the dataset"""
    pipeline_type: Optional[PipelineType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipeline_type'), 'exclude': lambda f: f is None }})
    r"""The type of data included in the dataset - \\"event\\" or \\"session\\" """
    saved: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('saved'), 'exclude': lambda f: f is None }})
    type: Optional[CreateDatasetRequestType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""What the dataset is to be used for - \\"evaluation\\" or \\"fine-tuning\\" """
    

