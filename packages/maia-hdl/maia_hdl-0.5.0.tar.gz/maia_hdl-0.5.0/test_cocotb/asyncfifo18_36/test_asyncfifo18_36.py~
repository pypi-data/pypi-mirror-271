import cocotb

from cocotb.clock import Clock
from cocotb.triggers import ClockCycles, RisingEdge

import numpy as np


@cocotb.test()
async def test_noise_input(dut):
    dut.rst.value = 1
    dut.s_axi_lite_rst.value = 1
    dut.clk.value = 0
    dut.s_axi_lite_clk = 0
    cocotb.start_soon(Clock(dut.clk, 15, units='ns').start())
    cocotb.start_soon(Clock(dut.s_axi_lite_clk, 10, units='ns').start())
    await ClockCycles(dut.s_axi_lite_clk, 4)
    dut.rst.value = 0
    dut.s_axi_lite_rst.value = 0

    scale = 1024
    mask = 2**12 - 1
    rising = RisingEdge(dut.clk)
    for _ in range(20000):
        re, im = np.round(np.random.randn(2) * scale)
        dut.re_in.value = int(re) & mask
        dut.im_in.value = int(im) & mask
        await rising
