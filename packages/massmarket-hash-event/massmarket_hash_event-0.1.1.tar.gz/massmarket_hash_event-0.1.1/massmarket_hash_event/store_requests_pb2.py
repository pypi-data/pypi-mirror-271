# SPDX-FileCopyrightText: 2024 Mass Labs
#
# SPDX-License-Identifier: MIT

# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: store_requests.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from massmarket_hash_event import error_pb2 as error__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14store_requests.proto\x12\x0bmarket.mass\x1a\x0b\x65rror.proto\"L\n\x11\x43ommitCartRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\x0c\x12\x0f\n\x07\x63\x61rt_id\x18\x02 \x01(\x0c\x12\x12\n\nerc20_addr\x18\x03 \x01(\x0c\"f\n\x12\x43ommitCartResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\x0c\x12!\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x12.market.mass.Error\x12\x19\n\x11\x63\x61rt_finalized_id\x18\x03 \x01(\x0c\"-\n\x17GetBlobUploadURLRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\x0c\"^\n\x18GetBlobUploadURLResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\x0c\x12!\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x12.market.mass.Error\x12\x0b\n\x03url\x18\x03 \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'store_requests_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_COMMITCARTREQUEST']._serialized_start=50
  _globals['_COMMITCARTREQUEST']._serialized_end=126
  _globals['_COMMITCARTRESPONSE']._serialized_start=128
  _globals['_COMMITCARTRESPONSE']._serialized_end=230
  _globals['_GETBLOBUPLOADURLREQUEST']._serialized_start=232
  _globals['_GETBLOBUPLOADURLREQUEST']._serialized_end=277
  _globals['_GETBLOBUPLOADURLRESPONSE']._serialized_start=279
  _globals['_GETBLOBUPLOADURLRESPONSE']._serialized_end=373
# @@protoc_insertion_point(module_scope)
