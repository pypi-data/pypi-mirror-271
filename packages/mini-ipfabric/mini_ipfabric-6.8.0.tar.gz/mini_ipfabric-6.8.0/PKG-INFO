Metadata-Version: 2.1
Name: mini-ipfabric
Version: 6.8.0
Summary: Mini Python package for interacting with IP Fabric using requests.
Home-page: https://gitlab.com/ip-fabric/integrations/mini-ipfabric
License: MIT
Keywords: ipfabric,ip-fabric,community-fabric
Author: Justin Jeffery
Author-email: justin.jeffery@ipfabric.io
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: importlib-metadata (==0.12) ; python_version < "3.8"
Requires-Dist: importlib_resources (>=5.0,<6.0) ; python_version < "3.9"
Requires-Dist: requests (>=2.31.0,<3.0.0)
Project-URL: Repository, https://gitlab.com/ip-fabric/integrations/mini-ipfabric
Description-Content-Type: text/markdown

# Mini IP Fabric Python SDK

## IP Fabric

IP Fabric is a vendor-neutral network assurance platform that automates the 
holistic discovery, verification, visualization, and documentation of 
large-scale enterprise networks, reducing the associated costs and required 
resources whilst improving security and efficiency.

It supports your engineering and operations teams, underpinning migration and 
transformation projects. IP Fabric will revolutionize how you approach network 
visibility and assurance, security assurance, automation, multi-cloud 
networking, and trouble resolution.

## Project Description

Minimal Python Client for querying IP Fabric Table or Intent Summary using `requests`.

For full feature client please see [ipfabric](https://pypi.org/project/ipfabric/).

## Versioning

`Major.Minor.Patch`: For best results please match the `Major.Minor` to your IP Fabric installation.

## Installation

```commandline
pip install mini_ipfabric
```

## Configuration/Usage

```python
import os
from mini_ipfabric import IPFClient

ipf = IPFClient(base_url=os.getenv('IPF_URL'), auth=os.getenv('IPF_TOKEN'), verify=True)

print(ipf.technology.keys())
print(ipf.inventory.keys())

data = ipf.fetch_all(endpoint='/inventory/devices', reports=False, filters=None, columns=None)
# endpoint can be API or Web endpoint.

intents = ipf.get_intents()

```

## Support

Please open a ticket on GitLab.


