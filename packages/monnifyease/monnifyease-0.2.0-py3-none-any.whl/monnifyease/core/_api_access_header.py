"""
This is aninterface betwee the MonnifyBaseClient and SyncBaseRequestClient classes to implement the
access token header generated by the MonnifyBaseClient class
"""

from typing import Protocol

from monnifyease.core._api_base import MonnifyBaseClient
from monnifyease.core._api_base_envar import EnvConfig


class AccessHeaderToken(Protocol):
    """
    This protocol defines the interface for generating an authorization header
    used for authentication with the Monnify API.

    A class conforming to this protocol should implement the
    `generate_auth_header` method.
    """
    def get_auth_header(self) -> dict:
        """
        Generates an authorization header dictionary for Monnify API requests.

        The specific format and content of the header might depend on the
        implementation details.

        Returns:
            dict: A dictionary containing the authorization header information.
        """


class AccessHeader(AccessHeaderToken):
    """
    An implementation of the AccessHeaderToken protocol that retrieves
    an authorization header from a MonnifyBaseClient instance using the
    default environment configuration (EnvConfig).
    """
    @classmethod
    def get_auth_header(cls) -> dict:
        """
        Gets an authorization header dictionary for Monnify API requests
        using the default environment configuration (EnvConfig) to retrieve
        access tokens.

        Returns:
            dict: A dictionary containing the authorization header information.
        """
        client = MonnifyBaseClient(EnvConfig)
        return client.get_access_token()
