import{b8 as g,d as h,b as v,W as S,Q as k,an as x,e as F,u as e,c as N,g as m,a as D,h as I,a1 as B,o as J,m as p,b9 as O,ba as P,bb as Q,bc as T,ae as d,b5 as i,b7 as V}from"./index-DbqzL2G0.js";import{u as U}from"./usePageTitle-DXbXnued.js";class W extends g{parse(t){return JSON.parse(decodeURIComponent(t??""))}format(t){return encodeURIComponent(JSON.stringify(t))}}const M=h({__name:"FlowRunCreate",setup(y){const t=v(),r=S("deploymentId"),l=B(),f=k("parameters",W,void 0),{deployment:o}=x(r),w=async c=>{var u,a;try{const n=await t.deployments.createDeploymentFlowRunV2(r.value,c),s=((a=(u=c.state)==null?void 0:u.stateDetails)==null?void 0:a.scheduledTime)??void 0,b=!s,C=Q(T,{flowRun:n,flowRunRoute:d.flowRun,router:l,immediate:b,startTime:s});i(C,"success"),l.push(d.deployment(r.value))}catch(n){const s=V(n,"Something went wrong trying to create a flow run");i(s,"error"),console.error(n)}},R=()=>{l.back()},_=F(()=>o.value?`Create Flow Run for Deployment: ${o.value.name}`:"Create Flow Run for Deployment");return U(_),(c,u)=>{const a=I("p-layout-default");return e(o)?(J(),N(a,{key:0},{header:m(()=>[p(e(O),{deployment:e(o)},null,8,["deployment"])]),default:m(()=>[p(e(P),{deployment:e(o),parameters:e(f),onSubmit:w,onCancel:R},null,8,["deployment","parameters"])]),_:1})):D("",!0)}}});export{M as default};
//# sourceMappingURL=FlowRunCreate-DfgAD_8o.js.map
