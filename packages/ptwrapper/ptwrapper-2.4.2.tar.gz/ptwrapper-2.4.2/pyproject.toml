[tool.poetry]
name = "ptwrapper"
version = "2.4.2"
description = "A Pointing Tool OSVE wrapper"
authors = [
    "Marc Costa <marc.costa@ext.esa.int>",
    "Rafael Andres <rafael.andres@ext.esa.int>"

]
license = "European Space Agency Public License (ESA-PL) Permissive (Type 3) â€“ v2.4"
readme = "README.md"

documentation = "https://.github.io/ptwrapper"
homepage = "https://juigitlab.esac.esa.int/core-system/uplink/auxiliary-tools/ptwrapper"
repository = "https://juigitlab.esac.esa.int/core-system/uplink/auxiliary-tools/ptwrapper"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "ptwrapper", from = "src" }
]

[tool.poetry.scripts]
ptwrapper = 'ptwrapper.cli:cli'

[tool.poetry.dependencies]
python = ">=3.8 <4.0"
osve = ">=2.4.1"

[tool.poetry.dev-dependencies]
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
isort = "*"
mkdocstrings = {version = ">=0.18", extras = ["python"]}
mkdocs-material = "*"
mypy = "*"
pep8-naming = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
tryceratops = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

    [tool.pytest.ini_options]
    addopts = """\
        --cov ptwrapper \
        --cov tests \
        --cov-report term-missing \
        --no-cov-on-fail \
    """

    [tool.coverage.report]
    fail_under = 70
    exclude_lines = [
        'if TYPE_CHECKING:',
        'pragma: no cover'
    ]

    [tool.mypy]
    disallow_any_unimported = true
    disallow_untyped_defs = true
    no_implicit_optional = true
    strict_equality = true
    warn_unused_ignores = true
    warn_redundant_casts = true
    warn_return_any = true
    check_untyped_defs = true
    show_error_codes = true
