% generate test results to compare Palamedes output of PSI routines to my own routines
%when the PSI routine is setup in 'PAL_AMPM_CreateLUT' the parameter 'beta' is set to 10.^b
% I change it back to normal coordinates. The 'PAL_AMPM_CreateLUT.' in this folder overrides the one in the Palamedes folder to
% accomplish this.

%test logistic linear coordinates marginalize none
addpath(genpath('../../PSI_method/palamedes1_8_0/Palamedes/')) 
rootPath = '../../../pychoacoustics_data/test_data/PSI_method/results/';
betaSpace = 10.^(log10(0.1):log10(1.1):log10(10));
%betaSpace = log10(0.1):log10(1.1):log10(10);

resps = load(strcat(rootPath, 'resp_logistic_test1.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', [-20:1:20], ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', []);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test1.txt'), res)

%test2
resps = load(strcat(rootPath, 'resp_logistic_test2.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', [-20:1:20], ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [1 -2 -3 -4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test2.txt'), res);

%test3
resps = load(strcat(rootPath, 'resp_logistic_test3.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', [-20:1:20], ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [-1 2 -3 -4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test3.txt'), res);

%test4
resps = load(strcat(rootPath, 'resp_logistic_test4.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', [-20:1:20], ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [-1 -2 -3 4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test4.txt'), res);

%test5
resps = load(strcat(rootPath, 'resp_logistic_test5.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', [-20:1:20], ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [-1 2 -3 4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test5.txt'), res);

alphaMin = log(0.5); alphaMax = log(50)+log(1.2); alphaStep = log(1.2);
xMin = log(0.05); xMax = log(500)+log(1.2); xStep = log(1.2);
alphaSpace = [alphaMin:alphaStep:alphaMax];
xSpace = [xMin:xStep:xMax];

%test6
%betaSpace = 10.^(log10(0.1):log10(1.1):log10(10));
resps = load(strcat(rootPath, 'resp_logistic_test6.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', xSpace, ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', []);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test6.txt'), res)

%test7
resps = load(strcat(rootPath, 'resp_logistic_test7.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', xSpace, ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [1 -2 -3 -4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test7.txt'), res);

%test8
resps = load(strcat(rootPath, 'resp_logistic_test8.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', xSpace, ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [-1 2 -3 -4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test8.txt'), res);

%test9
resps = load(strcat(rootPath, 'resp_logistic_test9.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', xSpace, ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [-1 -2 -3 4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test9.txt'), res);

%test10
resps = load(strcat(rootPath, 'resp_logistic_test10.txt'));
PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
                      'priorBetaRange', betaSpace, ...
                      'priorLamdaRange', [0:0.01:0.2], ...
                      'stimRange', xSpace, ...
                      'PF', @PAL_Logistic, ...
                      'numTrials', 200, ...
                      'marginalize', [-1 2 -3 4]);
for i=1:length(resps)
    PM = PAL_AMPM_updatePM(PM, resps(i));
end

res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
dlmwrite(strcat(rootPath, 'res_pal_logistic_test10.txt'), res);