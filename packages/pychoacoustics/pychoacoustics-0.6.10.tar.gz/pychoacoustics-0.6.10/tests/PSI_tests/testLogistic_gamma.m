% generate test results to compare Palamedes output of PSI routines to my own routines
%when the PSI routine is setup in 'PAL_AMPM_CreateLUT' the parameter 'beta' is set to 10.^b
% I change it back to normal coordinates. The 'PAL_AMPM_CreateLUT.' in this folder overrides the one in the Palamedes folder to
% accomplish this.

%test logistic linear coordinates marginalize none
addpath(genpath('../../PSI_method/palamedes1_8_0/Palamedes/')) 
rootPath = '../../../pychoacoustics_data/test_data/PSI_method/results/';
betaSpace = 10.^(log10(0.1):log10(1.1):log10(10));
%betaSpace = log10(0.1):log10(1.1):log10(10);

marginalize_opts = {[-1,-2,-3,-4], [1,-2,-3,-4], [-1,2,-3,-4], [-1,-2,3,-4], ...
                    [-1,-2,-3,4], [-1,2,3,-4], [-1,2,-3,4], ...
                    [-1,-2,3,4], [-1,2,3,4]};

testN = 0

for opN =1:length(marginalize_opts)
    testN = testN+1
    resps = load(strcat(rootPath, 'resp_logistic_test_gamma', num2str(testN), '.txt'));
    PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
                          'priorBetaRange', betaSpace, ...
                          'priorGammaRange', [0:0.01:0.3], ...
                          'priorLamdaRange', [0:0.01:0.2], ...
                          'stimRange', [-20:1:20], ...
                          'PF', @PAL_Logistic, ...
                          'numTrials', 200, ...
                          'marginalize', marginalize_opts{opN});
    for i=1:length(resps)
        PM = PAL_AMPM_updatePM(PM, resps(i));
    end

    res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
    dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma', num2str(testN), '.txt'), res)
end

alphaMin = log(0.5); alphaMax = log(50)+log(1.2); alphaStep = log(1.2);
xMin = log(0.05); xMax = log(500)+log(1.2); xStep = log(1.2);
alphaSpace = [alphaMin:alphaStep:alphaMax];
xSpace = [xMin:xStep:xMax];

for opN =1:length(marginalize_opts)
    testN = testN+1
    resps = load(strcat(rootPath, 'resp_logistic_test_gamma', num2str(testN), '.txt'));
    PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
                          'priorBetaRange', betaSpace, ...
                          'priorGammaRange', [0:0.01:0.3], ...
                          'priorLamdaRange', [0:0.01:0.2], ...
                          'stimRange', xSpace, ...
                          'PF', @PAL_Logistic, ...
                          'numTrials', 200, ...
                          'marginalize', marginalize_opts{opN});
    for i=1:length(resps)
        PM = PAL_AMPM_updatePM(PM, resps(i));
    end

    res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
    dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma', num2str(testN), '.txt'), res);
end


% $$$ %test2
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma2.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', [-20:1:20], ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [1 -2 -3 -4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma2.txt'), res);
% $$$ 
% $$$ %test3
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma3.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', [-20:1:20], ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 2 -3 -4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma3.txt'), res);
% $$$ 
% $$$ %test4
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma4.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', [-20:1:20], ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 -2 3 -4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma4.txt'), res);
% $$$ 
% $$$ %test5
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma5.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', [-20:1:20], ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 -2 -3 4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma5.txt'), res);
% $$$ 
% $$$ %test6
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma6.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', [-10:1:10], ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', [-20:1:20], ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 2 3 -4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [PM.threshold; PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma6.txt'), res);
% $$$ 
% $$$ alphaMin = log(0.5); alphaMax = log(50)+log(1.2); alphaStep = log(1.2);
% $$$ xMin = log(0.05); xMax = log(500)+log(1.2); xStep = log(1.2);
% $$$ alphaSpace = [alphaMin:alphaStep:alphaMax];
% $$$ xSpace = [xMin:xStep:xMax];
% $$$ 
% $$$ 
% $$$ 
% $$$ 
% $$$ %test7
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma7.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', xSpace, ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1, 2, -3, 4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma7.txt'), res)
% $$$ 
% $$$ %test7
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma7.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', xSpace, ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [1 -2 -3 -4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma7.txt'), res);
% $$$ 
% $$$ %test8
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma8.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', xSpace, ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 2 -3 -4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma8.txt'), res);
% $$$ 
% $$$ %test9
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma9.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', xSpace, ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 -2 -3 4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma9.txt'), res);
% $$$ 
% $$$ %test10
% $$$ resps = load(strcat(rootPath, 'resp_logistic_test_gamma10.txt'));
% $$$ PM = PAL_AMPM_setupPM('priorAlphaRange', alphaSpace, ...
% $$$                       'priorBetaRange', betaSpace, ...
% $$$                       'priorGammaRange', [0:0.05:0.3], ...
% $$$                       'priorLamdaRange', [0:0.01:0.2], ...
% $$$                       'stimRange', xSpace, ...
% $$$                       'PF', @PAL_Logistic, ...
% $$$                       'numTrials', 200, ...
% $$$                       'marginalize', [-1 2 -3 4]);
% $$$ for i=1:length(resps)
% $$$     PM = PAL_AMPM_updatePM(PM, resps(i));
% $$$ end
% $$$ 
% $$$ res = [exp(PM.threshold); PM.slope; PM.guess; PM.lapse]';
% $$$ dlmwrite(strcat(rootPath, 'res_pal_logistic_test_gamma10.txt'), res); % 