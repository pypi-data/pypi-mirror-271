Metadata-Version: 2.1
Name: pyson_data
Version: 0.1.2
Summary: Pyson package for .pyson data format support
Home-page: https://github.com/OmegaGodzilla66/PYSON
Author: josh-co-dev
Author-email: josh-co <omegaraspberrypi@gmail.com>
Project-URL: Homepage, https://github.com/ProbablyComputingSquid/PYSON/
Project-URL: Issues, https://github.com/ProbablyComputingSquid/PYSON/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE

# PYSON #
##### Maintained by: [OmegaGodzilla66](https://github.com/OmegaGodzilla66), [ComputingSquid](https://github.com/ProbablyComputingSquid), [CoolSchnoodle](https://github.com/coolSchnoodle), and [nmd102](https://github.com/nmd102) #####


## Overview ##
The purpose of this project is to provide a python-based alternative to JSON. This is a (almost) fully functional JSON-inspired data management system!

## How to Use ##
**THIS PROJECT IS NOT YET FINISHED! DOCUMENTATION IS ONLY SHOWN FOR COMPLETED FEATURES. SOME FEATURES MAY BREAK DUE TO CONTINUED DEVELOPMENT. IF YOU SEE A PROBLEM, PLEASE LET ME KNOW!**
<br>Believe it or not, this project is surprisingly easy to use.<br>
<br> The only thing you have to do is `pip install pyson-data` ! From then, you can just `import pyson_data as pyson`, and use functions as normal!
Support for other languages may come soon.<br>

## quickstart ## 
Refer to the project wiki [here](https://github.com/OmegaGodzilla66/PYSON/wiki)

## documentation ##
Documentation has also been moved to the project wiki [here](https://github.com/OmegaGodzilla66/PYSON/wiki) to decrease clutter in the README.

## Supported Types ##
There are 4 supported types: int, float, str, and list
<br><br>
- An int is a whole number that can be any value<br>
- A str is a list of text (quotes not required)<br>
- A list is a list of values, which currently have to all be strings. List items are seperated by the (*) seperator.
Currently there is no escaping support. I don't really know why you would use that value normally in a list. <br> 
- A float is a decimal number, that can be any value<br>

More supported types may be added. 

## Changelog ##
- v0.1.2: Refactored pyson.py
- v0.1.1: Added writeMultiple function, various bug fixes
- v0.1.0-alpha: package & release deployed to pypi, merged code to main, and resolved all merge conflicts! truly a cause for celebration ðŸŽ‰
- v0.0.9: coolSchnoodle and nmd102 made code fixes and README fixes
- v0.0.8: Added updateData function
- v0.0.7: Fixed errors, refactored bad code
- v0.0.6: Added floats
- v0.0.5: Updated naming system, ported to github!
- v0.0.4: Added a function that checks if a file is compatible with .pyson file format. Fixed a bug in the write. Other general bug fixes. 
- v0.0.3: Added a write function! This is now (technically) a fully functioning data service!
- v0.0.2: Added a read function for the whole file. Returns a list of all contents. This is actually getting pretty cool!
- v0.0.1: Initial launch! Basic reading features for a .cnf (renamed almost immediately to pyson) file. Current compatible types are string, int, and list.

### Dev comments ###
0.0.8:<br>
> I (computingSquid) have had to resort to drastic measures to get my pull request approved. CoolSchnoodle was forced to say "uwu"

0.0.5: <br>
> Wahoo! Porting to github!...oh shoot now I have to rename everything.

- OmegoGodzilla66

0.0.4: <br>
> HAHA I HAVE DONE IT! ... Wait no never mind I'm stupid

- OmegaGodzilla66
> Compatability checks are my nightmare. AAAAAA.

- OmegaGodzilla66
