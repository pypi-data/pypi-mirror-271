[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
target-version = ["py310"]
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
(
  /(
    | \.git
    | \.mypy_cache
  )/
)
'''

[tool.isort]
line_length = 99
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']
no_lines_before = ['STDLIB', 'LOCALFOLDER']
known_third_party = [
    'pytest',
]
known_local_folder = []
multi_line_output = 3
lines_after_imports = 2
include_trailing_comma = true
use_parentheses= true


[tool.poetry]
name = "pytest-kookit"
version = "0.0.1"
description = "Your simple but kooky integration testing with pytest"
readme = "README.md"
license = "MIT"
authors = ["Dmitry Makarov <mit.makaroff@gmail.com>"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "Integration Testing",
    "External Services' mocks",
]
packages = [
    { include = "kookit" },
    { include = "kookit/py.typed" }
]

[tool.poetry.urls]
"Changelog" = "https://github.com/Mityuha/pytest-kookit/releases"
"Source" = "https://github.com/Mityuha/pytest-kookit"
"Tracker" = "https://github.com/Mityuha/pytest-kookit/issues"

[tool.poetry.plugins."pytest11"]
"kookit" = "kookit.main"

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
multiprocess = "*"
fastapi = ">=0.69.0"
uvicorn = "*"
httpx = "*"
pytest-mock = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
ruff = "^0.1.4"
black = "^23.10.1"
pydocstringformatter = [
    {version = "^0.7.3", python = ">=3.8"},
]
isort = "^5.12.0"
mypy = "^1.5.1"
pre-commit = "^3.5.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
autoflake = "^2.2.1"
types-dataclasses = "^0.6.6"
sort-all = "^1.2.0"
tox = "^4.11.3"
faker = "^19.13.0"
requests = "^2.31.0"
pytest-httpx = "0.22.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
xfail_strict = "true"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/config_file.html
python_version = "3.10"
exclude = []
warn_unused_configs = true
ignore_missing_imports = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 99

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "F403"]


[tool.coverage]
[tool.coverage.run]
omit = [
    '__init__.py',
]
[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py38,py39,py310,py311,py312

[testenv]
deps =
    black==22.8.0
    isort==5.10.1
    mypy==1.5.1
    ruff==0.1.4

    multiprocess==0.70.15
    fastapi==0.98.0
    uvicorn==0.23.2
    httpx==0.24.1
    pytest==7.4.3
    pytest-mock==3.12.0
    requests==2.31.0
    faker==19.13.0
    pytest-httpx==0.22.0
    pytest-asyncio==0.21.1

commands = 
    black --check kookit/ tests/
    isort --check kookit tests/
    ruff check kookit/ tests/
    mypy kookit/ tests/ 
    pytest tests/ -x
setenv =
    PIP_INDEX_URL = {env:PIP_INDEX_URL:https://pypi.org/simple/}

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
"""
