Metadata-Version: 2.1
Name: pyviz3d
Version: 0.3.1
Summary: PyViz3D is a python package to visualize 3D scenes.
Author-email: Francis Engelmann <francis.engelmann@gmail.com>
License: MIT License
        
        Copyright (c) 2018 Francis Engelmann <francis.engelmann@gmail.com>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/francisengelmann/pyviz3d
Keywords: 3d,visualizer,blender
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy

<p align="center"><img width="40%" src="docs/img/pyviz3d-logo.png" /></p>

----
PyViz3D is a python package to visualize 3D scenes directly in your browser, and create beautiful renderings with blender.

#### Links

- Install: ```pip3 install pyviz3d```
- [Documentation](https://francisengelmann.github.io/PyViz3D/)
- [Examples](https://github.com/francisengelmann/PyViz3D/tree/master/examples)
- [Blender Instructions](https://github.com/francisengelmann/PyViz3D/tree/master?tab=readme-ov-file#blender)

### Examples
Scene graph example, including blender rendering.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_graph.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/graph/index.html)
<p align="center">
  <img width="45%" src="docs/img/example_graph.png" />
  <img width="45%" src="docs/img/example_graph_blender.png" />
</p>

Blender example, including blender rendering.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_blender.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/blender/index.html)
<p align="center">
  <img width="45%" src="docs/img/example_blender.png" />
  <img width="45%" src="docs/img/example_blender_blender.png" />
</p>

Polygon meshes example.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_meshes.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/meshes/index.html)
[<p align="center"><img width="60%" src="docs/img/example_meshes.png" /></p>](https://francisengelmann.github.io/pyviz3d_examples/meshes/index.html)

Bounding boxes example.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_bounding_boxes.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/bounding_boxes/index.html)
[<p align="center"><img width="60%" src="docs/img/example_bounding_boxes.png" /></p>](https://francisengelmann.github.io/pyviz3d_examples/bounding_boxes/index.html)

Polyline example.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_polylines.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/polylines/index.html)
[<p align="center"><img width="60%" src="docs/img/example_polylines.png" /></p>](https://francisengelmann.github.io/pyviz3d_examples/polylines/index.html)

Arrow example.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_arrows.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/arrows/index.html)
[<p align="center"><img width="60%" src="docs/img/example_arrows.png" /></p>](https://francisengelmann.github.io/pyviz3d_examples/arrows/index.html)

Point clouds and segments example.
[[Show Code]](https://github.com/francisengelmann/PyViz3D/blob/master/examples/example_normals.py)
[[Show Demo]](https://francisengelmann.github.io/pyviz3d_examples/normals/index.html)
[<p align="center"><img width="60%" src="docs/img/example.png" /></p>](https://francisengelmann.github.io/pyviz3d_examples/normals/index.html)

# Blender
To create beautiful illustrations with blender consider the following points:
- Install Blender from https://www.blender.org/ (tested version 4.0).
- Calling `v.save(..., show_in_blender=True)` creates a `.blend` file which you can open in blender.
- Check `examples/examples_graph.py` for a complete example.
<!-- 2. Set up alias in you ~/.bashrc or ~/.zshrc etc. -->
<!-- `alias blender="/Applications/Blender.app/Contents/MacOS/Blender"` -->
<!-- then `source ~/.zshrc` -->
<!-- 2. `blender myscene.blend --background --python blender.py` -->
<!-- currently there is no myscene.blend to remove that: `blender --background --python blender.py` -->
<!-- Select camera: View/Cameras/Active Camera     -->
<!-- Lock camera to view:   -->
<!-- Press N to show sidebar.   -->
<!-- Under View, lock camera to view.   -->
<!-- Control the camera with the small coordinate frame on the top right. -->
<!-- 5. This will render an `output.png` -->
<!-- 6. The scene can also be opened in blender `bunny.blend` -->
<!-- 7. Need to install ffmpeg and convert (on mac via brew)   -->
<!-- brew install ffmpeg -->

# Deployment
- Make sure twine is installed: `python3 -m pip install build twine`
- Create source archive and wheel: `python3 -m build`
- Check that it will render properly on PyPi: `twine check dist/*`
- Upload to PyPi: `twine upload dist/*`


# BibTeX
Please consider citing PyViz3D in your publications if it helps your research.
```
@misc{engelmann2019pyviz3d,
  title={PyViz3D},
  author={Francis Engelmann},
  year={2019},
  howpublished={\url{https://github.com/francisengelmann/PyViz3D}},
}
```
