[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "qtile-bonsai"
description = "A flexible custom layout for the qtile window manager that supports arbitrarily nestable tabs and splits."
readme = "README.md"
requires-python = ">=3.10,<3.13"
keywords = [
    "qtile",
    "bonsai",
    "tiling",
    "window",
    "manager",
    "layout",
]
authors = [
    { name = "Aravinda Rao", email = "maniacalace@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Desktop Environment :: Window Managers",
]
dynamic = []
dependencies = [
    "strenum",
    "psutil",
]
version = "0.1.0"

[project.license]
text = "MIT"

[project.urls]
Documentation = "https://github.com/aravinda0/qtile-bonsai#readme"
Issues = "https://github.com/aravinda0/qtile-bonsai/issues"
Source = "https://github.com/aravinda0/qtile-bonsai"

[tool.pdm.version]
source = "file"
path = "src/qtile_bonsai/__about__.py"

[tool.pdm.dev-dependencies]
dev = [
    "xcffib",
    "cairocffi",
    "qtile",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pyvirtualdisplay",
    "pywlroots",
    "pywayland",
    "xkbcommon",
    "pyside6>=6.6.1",
    "pyright",
    "pre-commit",
    "ruff",
    "jinja2>=3.1.3",
    "ptpython>=3.0.25",
]

[tool.pdm.scripts]
cov = "pytest --cov-report=term-missing --cov-report=xml --cov-config=pyproject.toml --cov=src/qtile_bonsai --cov=tests {args}"
no-cov = "cov --no-cov {args}"
format = "ruff format {args}"
format_check = "ruff format --check {args}"

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "src/qtile_bonsai/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
indent-width = 4
fix = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "E",
    "F",
    "N",
    "S",
    "FBT",
    "B",
    "C4",
    "T20",
    "PT",
    "RET",
    "SIM",
    "RUF",
    "I",
]
ignore = [
    "S101",
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
]
unfixable = [
    "T20",
    "F841",
    "F401",
]

[tool.ruff.lint.isort]
known-first-party = [
    "qtile_bonsai",
]
lines-after-imports = 2
split-on-trailing-comma = false
