[tool.poetry]
name = "ragrank"
version = "0.0.7"
description = "An evaluation library for RAG models"
authors = ["Izam Mohammed <izamdeveloper1@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/Auto-Playground/ragrank"
packages = [
    { include = "ragrank", from = "src" },
]
keywords = ["rag", "evaluation", "llmops"]



[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = "^1.26.4"
pathlib = "^1.0.1"
urllib3 = "^2.2.1"
requests-toolbelt = "^1.0.0"
requests = "^2.28.2, !=2.30.0"
pydantic = "^2.6.3"
pandas = "^2.2.1"
tqdm = "^4.66.2"
datasets = "^2.18.0"
openai = "^1.14.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
furo = "^2024.1.29"
myst-parser = "^2.0.0"
sphinx-design = "^0.5.0"
linkify-it-py = "^2.0.3"
sphinxext-opengraph = "^0.9.1"
sphinx-copybutton = "^0.5.2"
sphinx-rtd-theme = "^2.0.0"
sphinx-autodocgen = "^1.3"
sphinxcontrib-napoleon = "^0.7"
sphinx-autopackagesummary = "^1.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.1"
isort = "^5.13.2"
ruff = "0.2.2"
codespell = "^2.2.6"
bandit = "^1.7.7"
flake8 = "^7.0.0"
pytest-cov = "^4.1.0"
openai = "^1.13.3"
langchain-core = "^0.1.32"
llama-index = "^0.10.20"
langchain-openai = "^0.0.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 69

[tool.ruff.lint]
select = [
    # pep8 naming
    "N",
    # isort
    "I",
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # pydocstyle
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8 annotations
    "ANN",
    # flake8 commas
    "COM818",
    # flake8-future-annotations
    "FA",
    # flake8-print
    "T20",
    # flake8-self
    "SLF",
    # flake8-raise
    "RSE",
    # flake8-pyi
    "PYI",
    # flake8-no-pep420
    "INP",
    # flake8-import-conventions
    "ICN",
    # flake8-implicit-str-concat 
    "ISC002",
    "ISC003",
    # flake8-builtins
    "A",
    # flake8-boolean-trap
    "FBT",
    # flake8-blind-except
    "BLE",
]

ignore = [
    "ANN101",
]
pyupgrade.keep-runtime-typing = true

[tool.ruff.lint.pycodestyle]
max-line-length = 79

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 79
preview = true

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["S101"]
