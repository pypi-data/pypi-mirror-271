Metadata-Version: 2.1
Name: tijatools
Version: 0.1.2
Summary: A customizable progress ring for terminal applications.
Author: Janos Tigyi
Author-email: tigyi.janos@bugfactory.hu
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: asyncio

# tijatools

## Descriptions

The tijatools is a Python package that allows you to display dynamic and customizable progress rings in the terminal. It's an ideal tool for providing visual feedback on the status of long-running operations.

## Installation

```bash
pip install tijatools

## Ussage
```bash
import asyncio
from tijatools import ProgressRing, AnimationMode

async def do_some_work(duration):
    await asyncio.sleep(duration)

class ATest:
    async def run_test(self, duration):
        ring = ProgressRing(rotate_symbols=['1', '2', '3', '4', '3', '2', '1'])
        print("ROTATE:")
        await ring.run_with_animation(do_some_work(duration), AnimationMode.ROTATE)
        print("BOUNCE:")
        await ring.run_with_animation(do_some_work(duration), AnimationMode.BOUNCE, shape="x")
        print("BOUNCE2:")
        await ring.run_with_animation(do_some_work(duration), AnimationMode.BOUNCE2)
        print("LOADING:")
        await ring.run_with_animation(do_some_work(duration), AnimationMode.LOADING)

if __name__ == "__main__":
    test = ATest()
    asyncio.run(test.run_test(10))
